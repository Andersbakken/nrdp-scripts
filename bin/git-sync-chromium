#!/usr/bin/perl

use strict;
require LWP::UserAgent;
require HTTP::Request::Common;
import HTTP::Request::Common qw(GET);

if(system("git fetch --all") != 0 || $?) {
    die "Not a git repo?";
}
if(system("git svn fetch") != 0 || $?) {
    die "Not setup for svn fetch?";
}

sub git_exec {
    my ($exe) = $@;
    my $output;
    if(open(EXE, "git " . $exe . "|")) {
        $output = <EXE>;
        close(EXE);
    }
    return $output;
}

for(("all", "pending")) {
    my $m = $_;
    print "Fetching: $m\n";

    my $url = "http://omahaproxy.appspot.com/$m";
    my $req = GET($url);
    my $ua = new LWP::UserAgent;
    my $response = $ua->request($req);
    if($response->code != 200)
    {
        print "Unable to fetch!\n";
        next;
    }

    my $raw = $response->content;
    my @lines = split(/\n/, $raw);
    my @column_names = split(/,/, shift @lines);

    for(@lines) {
        my $line = $_;
        my @c = split(/,/, $line);
        my %columns;
        for(@column_names) {
            my $column = $_;
            $columns{$column} = shift @c;
        }

        my $version_column = ($m eq "all") ? $columns{current_version} : $columns{version};
        my $git_revision = git_exec("svn find-rev r" . $columns{base_webkit_revision});
        chomp $git_revision;

        my $branch = "chromium_" . $columns{os} . "_" . $columns{channel} . "_" . $m;
        my $branch_oldsha = git_exec("show-ref -s " . $branch);
        chomp $branch_oldsha;

        my $tag = "chromium_" . $version_column;
        my $tag_oldsha = git_exec("show-ref -s " . $tag);
        chomp $tag_oldsha;

        if(!($tag_oldsha eq $git_revision) || !($branch_oldsha eq $git_revision)) {
            print "Updating(${branch_oldsha}::${tag_oldsha}): $branch -> $version_column (${git_revision}::" . $columns{base_webkit_revision} . ")\n";
            system("git branch -f $branch $git_revision >/dev/null 2>&1");
            system("git tag -f -m \"$branch ($url)\" $tag $git_revision >/dev/null 2>&1");
        }
    }
}
