#!/bin/bash

SCRIPT_DIR="$(dirname ${BASH_SOURCE[0]} )"

MODE="create"
if [ "$1" = "create" ]; then
    MODE="create"
    shift
elif [ "$1" = "list" ]; then
    MODE="list"
    shift
elif [ "$1" = "branch" ]; then
    MODE="branch"
    shift
elif [ "$1" = "issues" ]; then
    MODE="issues"
    shift
fi

if [ "$MODE" = "create" ]; then
    FROM="$1"
    if [ -z "$FROM" ]; then
        echo "Usage: $0 from [to]"
        exit 3
    fi
    TO="$2"
    [ -z "$TO" ] && TO=`git tracking`
    $SCRIPT_DIR/nrdp-service/cli.js --mode stash.pr.create --from "${FROM}" --to "${TO}"
elif [ "$MODE" = "branch" ]; then
    PULL_REQUEST_USER=`git config user.email | cut -d@ -f1`
    [ -z "$PULL_REQUEST_USER" ] && PULL_REQUEST_USER=`whoami`
    PULL_REQUEST_PREFIX=`git config pullrequest.prefix`
    [ -z "$PULL_REQUEST_PREFIX" ] && PULL_REQUEST_PREFIX="dev/${PULL_REQUEST_USER}/pull-requests"
    echo "${PULL_REQUEST_PREFIX}/${1}"
elif [ "$MODE" = "issues" ]; then
    PR_DIR=`mktemp -d /tmp/pr-XXXXXX`
    ISSUES_FILE="${PR_DIR}/pr-issues"
    $SCRIPT_DIR/nrdp-service/cli.js --mode stash.pr.issues --pullRequest "$1" >"${ISSUES_FILE}"
    ISSUES_COUNT=$(jq -r '. | length' "${ISSUES_FILE}")
    for ((i=0; i<$ISSUES_COUNT; i++ )); do
        ISSUE=$(jq -r ".[$i].key" "$ISSUES_FILE")
        ISSUE_URL=$(jq -r ".[$i].url" "$ISSUES_FILE")
        echo "${ISSUE} ($ISSUE_URL)"
    done
elif [ "$MODE" = "list" ]; then
    PR_MAX=5
    PR_STATE=
    PR_AUTHOR=`whoami`
    while [ "$#" -ge 1 ]; do
        if [ "$1" = "-a" ]; then
            PR_AUTHOR=""
        elif [ "$1" = "-o" ]; then
            PR_STATE="OPEN"
        elif [ "$1" = "-n" ]; then
            shift
            PR_MAX="$1"
        else
            echo "Unknown option: $1"
        fi
        shift
    done

    PR_DIR=`mktemp -d /tmp/pr-XXXXXX`
    PULLREQUESTS_FILE="${PR_DIR}/pullrequests"
    $SCRIPT_DIR/nrdp-service/cli.js --mode stash.pr.list --state "$PR_STATE" >"${PULLREQUESTS_FILE}"
    PR_COUNT=$(jq '.size' "${PULLREQUESTS_FILE}")
    for ((p=0; p<$PR_COUNT; p++ )); do
        jq ".values[$p]" "$PULLREQUESTS_FILE" >"${PR_DIR}/pullrequest"
        [ -n "$PR_STATE" ] && [ "$(jq -r '.state' ${PR_DIR}/pullrequest)" != "$PR_STATE" ] && continue
        [ -n "$PR_AUTHOR" ] && jq -r '.author.user.emailAddress' "${PR_DIR}/pullrequest" | grep -vq "$PR_AUTHOR" && continue
        [ "$PR_MAX" = "0" ] && break
        PR_MAX=$((PR_MAX-1))
        #cat "${PR_DIR}/pullrequest" | json_pp
        echo "$(jq -r '.author.user.displayName' ${PR_DIR}/pullrequest):$(jq '.id' ${PR_DIR}/pullrequest): $(jq -r '.links.self[0].href' ${PR_DIR}/pullrequest) [$(jq -r '.state' ${PR_DIR}/pullrequest)]"

        REVIEWERS_COUNT=$(jq -r '.reviewers | length' "${PR_DIR}/pullrequest")
        if [ -n "$REVIEWERS_COUNT" ] && [ "$REVIEWERS_COUNT" -gt 0 ]; then
            echo -n "    "
            for ((r=0; r<$REVIEWERS_COUNT; r++ )); do
                jq ".reviewers[$r]" "${PR_DIR}/pullrequest" >"${PR_DIR}/reviewer"
                if [ $(jq -r '.role' "${PR_DIR}/reviewer") == "REVIEWER" ]; then
                    echo -n "$(jq -r '.user.displayName' ${PR_DIR}/reviewer)($(jq -r '.status' ${PR_DIR}/reviewer)) "
                fi
            done
            echo
        fi
    done
    rm -rf "$PR_DIR"
else
    echo "Unable to run in mode $MODE"
fi
