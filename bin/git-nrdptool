#!/bin/bash

p4sync=
push=
setupsubmodules=
updatesubmodules=
filters=()
merges=()
while [ -n "$1" ]; do
    case "$1" in
        --p4sync)
            p4sync=1
            ;;
        --push=*)
            push=`echo $1 | sed -e 's,^[^=]*=,,'`
            ;;
        --cd=*)
            cd "`echo $1 | sed -e 's,^[^=]*=,,'`"
            ;;
        --filter=*)
            filters+=(`echo $1 | sed -e 's,^[^=]*=,,'`)
            ;;
        *)
            echo "Unhandled option $1"
            exit 1
            ;;
    esac
    shift
done
if [ -z "$p4sync" ] && [ -z "$push" ]; then
    echo "Nothing to do"
    exit 0
fi

git p4 fetch
#cur="`git branch | grep "\*" | awk '{print $2}'`"
for i in `git branch | awk '{print $NF}'`; do
    if [ "${#filters[@]}" -gt 0 ]; then
        ok=
        for filter in "${filters[@]}"; do
            if [ -n "$filter" ] && echo $i | grep --quiet "$filter"; then
                ok=1
                break;
            fi
        done
        if [ -z "$ok" ]; then
            echo "skipping branch $i"
            continue;
        fi
    fi
    echo "processing branch $i"
    #git show p4/$i | head -n1
    #git show $i | head -n1
    if [ "$p4sync" ]; then
        if [ "`git show p4/$i | head -n1`" == "`git show $i | head -n1`" ]; then
            echo "Skipping branch $i"
            continue
        else
            echo "About to do branch $i"
        fi
        git checkout -f $i
        git p4 sync
        # git submodule update --init
    fi


    if [ "$push" ]; then
        git push $push "$i"
    fi
done
#git checkout "$cur"
