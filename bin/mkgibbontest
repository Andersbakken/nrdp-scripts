#!/bin/bash
if [ -z "$NF_HTTPD_PREFIX" ]; then
    echo "Need to specific NF_HTTPD_PREFIX [dir:url]!"
    exit 1
fi
force=0
stub=0
openfile=0
while [ "$#" -gt 0 ]; do
    if [ "$1" = "-f" ]; then
        force=1
        shift
    elif [ "$1" = "-s" ]; then
        stub=1
        shift
    elif [ "$1" = "-o" ]; then
        openfile=1
        shift
    else
        break
    fi
done
bug="$1"
if [ -z "$bug" ]; then
    TESTS="`echo $NF_HTTPD_PREFIX | cut -d: -f1`/gibbontest-*"
    bug=`choose.pl -a -x "ls -t $TESTS"`
    bug=`basename $bug | sed -e 's,^gibbontest-,,' -e 's,\.js$,,'`
fi
url="$2"
name="$3"
if [ -z "$name" ] && echo $url | grep -v "^https*://" >/dev/null 2>&1; then
    name="$url"
    url=""
fi

[ -z "$name" ] && name="$bug"
echo $name | grep '\.js$' >/dev/null 2>&1 || name="${name}.js"
test_file="`echo $NF_HTTPD_PREFIX | cut -d: -f1`/gibbontest-$name"
test_url="`echo $NF_HTTPD_PREFIX | cut -d: -f2-`/gibbontest-$name"

if [ '!' -e "$test_file" ] || [ "$force" = "1" ]; then
    if [ "$stub" = "1" ]; then
        cat >$test_file <<EOF
function keyboardHandler(key) {
    nrdp.log.console("Got Key: " + JSON.stringify(key));
}
function networkResponseHandler(event) {
    nrdp.log.console("Got response " + event.state + " data: " + event.size);
    onTimeout();
}
function onImageLoaded(event) {
    nrdp.log.console("Got image loaded " + JSON.stringify(event));
}
function onTimeout() {
    nrdp.gibbon.load({ url:"https://movies.netflix.com/WiHome",
                       headers: {"X-Gibbon-Cache-Control":"key=foo,refresh,no-memory-cache"}
                     }, networkResponseHandler);
}

var w;
function main() {
    nrdp.gibbon.addEventListener("key", keyboardHandler);
    // nrdp.gibbon.load("https://movies.netflix.com/WiHome");
    nrdp.gibbon.scene.widget = w = nrdp.gibbon.makeWidget({width:1280, height:720, color:"#00ff00"});
    // w.image.url = "http://cdn-1.nflximg.com/images/7516/817516.jpg";
    // nrdp.gibbon.setTimeout(onTimeout, 0);
}
nrdp.qa.init(main);
EOF
    else
        if which jira >/dev/null 2>&1; then
            if [ -z "$url" ]; then
                if [ -z "$JIRA_PASSWORD" ] && [ -n "$JIRA_PASSWORD_COMMAND" ]; then
                    JIRA_PASSWORD="`$JIRA_PASSWORD_COMMAND`"
                fi
                JIRA_ARGS=
                if [ -z "$JIRA_PASSWORD" ]; then
                    read -p "JIRA Password: " -s JIRA_PASSWORD
                fi
                [ -n "$JIRA_PASSWORD" ] && JIRA_ARGS="$JIRA_ARGS --password $JIRA_PASSWORD"
                urls=
                urls="$urls `jira $JIRA_ARGS --action getIssue --issue $bug    | grep -o 'https*://[^ ]*'`"
                urls="$urls `jira $JIRA_ARGS --action getComments --issue $bug | grep -o 'https*://[^ ]*'`"
                url=`choose.pl -u -a $urls`
            fi
            if echo "$url" | grep "/secure/attachment/" >/dev/null 2>&1; then
                if [ -z "$JIRA_PASSWORD" ] && [ -n "$JIRA_PASSWORD_COMMAND" ]; then
                    JIRA_PASSWORD="`$JIRA_PASSWORD_COMMAND`"
                fi
                JIRA_ARGS=
                if [ -z "$JIRA_PASSWORD" ]; then
                    read -p "JIRA Password: " -s JIRA_PASSWORD
                fi
                [ -n "$JIRA_PASSWORD" ] && JIRA_ARGS="$JIRA_ARGS --password $JIRA_PASSWORD"
                tmpfile=`echo $url | sed "s,^.*/secure/attachment/[0-9]*/,,"`
                mkdir -p "/tmp/`dirname $tmpfile`"
                (cd /tmp; jira $JIRA_ARGS --action getAttachment --issue "$bug" --file "$tmpfile")
                url="file:///tmp/$tmpfile"
            fi
        fi

        if [ -z "$url" ]; then
            echo "No known URL!"
        else
            echo "nrdp.gibbon._baseUrl = \"$url\";" >$test_file
            curl "$url" >>$test_file
        fi
  fi
fi

if [ -e "$test_file" ]; then
    echo "File: $test_file"
    echo "URL: $test_url"
    [ -x `which xclip` ] && echo "$test_url" | xclip -in
    if [ "$openfile" = "1" ]; then
        if [ -n "$NF_EDITOR" ]; then
            $NF_EDITOR "$test_file"
        elif [ -n "$EDITOR" ]; then
            $EDITOR "$test_file"
        else
            echo "Neither \$EDITOR nor \$NF_EDITOR are set. Not sure what to do"
        fi
    fi
fi



