#!/bin/bash

function syncdir
{
    cd "$1"
    GITDIR=`git rev-parse --git-dir`
    if [ -z "$GITDIR" ] && which lsdev.pl >/dev/null 2>&1; then
        SRCDIR=`lsdev.pl -b src -tp -l`
        if [ -d "$SRCDIR/.git" ]; then
            GITDIR="$SRCDIR/.git"
        fi
    fi
    if [ -z "$GITDIR" ]; then
        echo "Not a git tree!"
        return
    fi
    ROOTDIR=`cd $GITDIR/.. && pwd`

    cd "$ROOTDIR"
    stashed=
    if [ -n "$autostash" ] && [ -n "`git status -s -uno 2>/dev/null`" ]; then
        stashed=1
        ignore_marker=`git ignore marker 2>/dev/null`
        git commit -a -m "${ignore_marker}git-sync"
    fi
    if [ -d "$GITDIR/refs/remotes/p4" ]; then
        git p4 sync
    elif git config -l | grep "^svn-remote" --quiet; then
        git svn update
    else
        git pull
    fi
    if [ -f "$ROOTDIR/.gitmodules" ]; then
        git submodule --init update
    fi
    if [ -n "$stashed" ]; then
        git reset HEAD~
    fi
}

idx=0
if [ "`git config sync.autostash`" = "true" ]; then
    autostash=1
fi
while [ -n "$1" ]; do
    case "$1" in
        -r|--recursive)
            recursive=1
            ;;
        --autostash|-a)
            autostash=1
            ;;
        --no-autostash)
            autostash=
            ;;
        *)
            if [ -d "$1" ]; then
                dirs[$idx]="$1"
                idx=`expr $idx + 1`
            else
                echo "$1 is not a directory"
            fi
            ;;
    esac
    shift
done
if [ $idx -eq 0 ]; then
    idx=1
    dirs[0]=`pwd`
fi

i=0
while [ $i -lt $idx ]; do
    root="${dirs[$i]}"
    syncdir "$root"
    if [ -n "$recursive" ]; then
        find -L "$root" -mindepth 1 -maxdepth 4 -type d -name ".git" | while read i; do
            sub=`cd $i/.. && pwd`
            [ "$root" != "$sub" ] && syncdir "$sub"
        done
    fi
    i=`expr $i + 1`
done
