#!/bin/sh

file=
number=20
changes=
command=
while [ "$#" -ge 1 ]; do
     if [ "$1" = "help" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
         echo "$0: [mode] [file] [count]"
         echo "Modes:"
         echo "  p4"
         echo "  stash"
         echo "  tracking"
         echo "  pulled"
         echo "  mine"
         echo "  mychanges"
         for branch in `git branch | sed "s,^\* *,,"`; do
	     [ -n "$branch" ] && echo "  $branch (lbranch)"
         done
         for branch in `git branch -r | grep -ve '->' | sed "s,^\* *,,"`; do
	     [ -n "$branch" ] && echo "  $branch (rbranch)"
         done
         for remote in `git remote`; do
	     [ -n "$remote" ] && echo "  $remote (remote)"
         done
         exit 0
    elif echo "$1" | grep "^-*[0-9]*$" >/dev/null 2>&1; then
        number=`echo $1 | sed "s,^-,,g"`
    elif [ "$1" = "-p4submit" ]; then
         command="p4 submit"
         [ -z "$changes" ] && changes="p4 changes"
    elif [ -z "$changes" ]; then
        if [ -e "$1" ]; then
            echo "File: $1"
            changes="changes $1"
        elif [ "$1" = "p4" ]; then
            changes="p4 changes"
        elif [ "$1" = "tracking" ]; then
            tracking=`git tracking`
            branch=`git branch | grep '^\*' | sed "s,\* ,,"`
            changes="changes $tracking..$branch"
        elif [ "$1" = "mine" ]; then
            changes="mychanges"
        elif [ "$1" = "stash" ]; then
            changes="stash list"
        elif echo "$1" | grep "\.\." >/dev/null 2>&1; then
            echo "Range: $1"
            changes="changes $1"
        elif git branch | grep "^\** *$1\$" >/dev/null 2>&1; then
            echo "Local Branch: $1"
            changes="changes $1"
        elif git branch -r | grep "^\** *$1\$" >/dev/null 2>&1; then
            echo "Remote Branch: $1"
            changes="changes $1"
        elif git remote | grep "^$1\$" >/dev/null 2>&1; then
            branch=`git branch | grep '^\*' | sed "s,\* ,,"`
            echo "Remote: $1 ($branch)"
            changes="changes $1/$branch..$branch"
        elif [ -n "$1" ]; then
            changes="$1"
        fi
    elif [ -z "$file" ]; then
        file="$1"
    else
        echo "Unrecognized option: $1"
        exit 1
    fi
    shift
done
[ -z "$changes" ] && changes="log --pretty=format:'%h %s [%an]' --no-merges"

choose=
head=0
while true; do
    #echo "git $changes"
    choose_args=
    if [ "$choose" = "n" ]; then
        head=$((head+$number))
    elif [ "$choose" = "p" ]; then
        head=$((head-$number))
    elif [ -n "$choose" ] && echo "$choose" | grep '[0-9]'; then
         choose_args="$choose_args -c $choose"
    fi
    choose_args="$choose_args -+$head -$number -a "
    change=`choose.pl $choose_args -x "git $changes $file" | cut -d' ' -f1 | sed "s,:,,g"`
    if [ -n "$change" ]; then
      if [ -z "$command" ]; then
          git show "$change"
      else
          exec="git $command $change"
          /bin/echo -n "Run '$exec'? "
          read choose
          [ "$choose" = "y" ] && $exec
      fi
      /bin/echo -n "Next? "
      read choose
    else
      break;
    fi
done
