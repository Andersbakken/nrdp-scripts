#!/bin/bash

file=
number=20
mode="changes"
mode_args=""
while [ "$#" -ge 1 ]; do
    if [ "$1" = "help" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        echo "$0: [mode] [file] [count]"
        echo "Modes:"
        echo "  stash"
        echo "  tracking"
        echo "  pulled"
        echo "  mine"
        for branch in `git branch | sed "s,^\* *,,"`; do
            [ -n "$branch" ] && echo "  $branch (lbranch)"
        done
        for branch in `git branch -r | grep -ve '->' | sed "s,^\* *,,"`; do
            [ -n "$branch" ] && echo "  $branch (rbranch)"
        done
        for remote in `git remote`; do
            [ -n "$remote" ] && echo "  $remote (remote)"
        done
        exit 0
    elif echo "$1" | grep -q "^-[0-9]\+$"; then
        number=`echo $1 | sed "s,^-,,g"`
    elif [ "$1" = "-command" ]; then
        shift
        command="$1"
    elif [ "$1" = "reflog" ]; then
        mode="changes -r"
    elif [ "$1" = "tracking" ] || [ "$1" = "submit" ]; then
        mode="changes -t"
    elif [ "$1" = "mine" ]; then
        mode="changes -s"
    elif [ "$1" = "merges" ]; then
        mode="changes -m"
        command="merge-changes"
    elif [ "$1" = "stash" ]; then
        mode="stash list"
    elif [ "$1" = "pulled" ]; then
        mode="changes @{1}.."
    elif echo "$1" | grep "\.\." >/dev/null 2>&1; then
        echo "Range: $1"
        mode="changes --cherry $1"
    elif [ -e "$1" ]; then
        echo "File: $1"
        mode="changes $1"
    elif git rev-parse --verify "$1" >/dev/null 2>&1; then
        if git show "$1" | grep "^Merge:" >/dev/null 2>&1; then
            echo "Merge: $1"
            mode="merge-changes $1"
        else
            echo "Branch: $1"
            mode="changes $1"
        fi
    elif git remote | grep "^$1\$" >/dev/null 2>&1; then
        branch=`git rev-parse --abbrev-ref HEAD`
        echo "Remote: $1 ($branch)"
        mode="changes $1/$branch..$branch"
    else
        mode_args="$mode_args $1"
    fi
    shift
done

choose=
head=0
while true; do
    #echo "git $mode"
    choose_args=
    if [ "$choose" = "n" ]; then
        head=$((head+$number))
    elif [ "$choose" = "p" ]; then
        head=$((head-$number))
    elif [ -n "$choose" ] && echo "$choose" | grep '[0-9]'; then
        choose_args="$choose_args -c $choose"
    fi
    choose_args="$choose_args -+$head -$number -n -a "
    change=`choose.pl $choose_args -x "git $mode $mode_args" | cut -d' ' -f1 | sed -e 's,:,,g' | perl -pe 's/\x1b\[[0-9;]*[mG]//g'`
    if [ "$change" = "n" ] || [ "$change" = "p" ]; then
        choose="$change"
    elif [ -n "$change" ]; then
        if [ "$command" = "submit" ]; then
            while true; do
                do_submit=y
                /bin/echo -n "Submit $change? "
                read do_submit
                if [ "$do_submit" = "d" ]; then
                    git show "$change"
                elif [ "$do_submit" = "a" ]; then
                    git submit -a "$change"
                    break
                elif [ "$do_submit" = "y" ]; then
                    git submit "$change"
                    break
                fi
            done
        elif [ -n "$command" ]; then
            do_exec=y
            exec="git $command $change"
            #/bin/echo -n "Run '$exec'? "
            #read do_exec
            [ "$do_exec" = "y" ] && $exec
        else
            echo "$change"
            git show "$change"
        fi
        /bin/echo -n "Next? "
        read choose
    else
        break;
    fi
done
