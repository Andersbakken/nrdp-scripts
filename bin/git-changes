#!/bin/sh

AUTHOR="$GIT_CHANGES_AUTHOR"
[ -z "$AUTHOR" ] && AUTHOR=`git config user.email`
[ -z "$AUTHOR" ] && AUTHOR=`whoami`

OPTS=""
MERGES="0"
BRANCHES="0"
COUNT_MERGES="0"
UNKNOWN_OPTS=""
SUBCOMMAND="log"
while [ "$#" -gt 0 ]; do
    OPT="$1"
    shift
    case $OPT in
        -r) SUBCOMMAND="reflog" ;;
        -i) MERGES="1" ;;
        -b) BRANCHES="1" ;;
        -) COUNT_MERGES="1" ;;
        --no-merges) MERGES="0" ;;
        -M|--merges) COUNT_MERGES="1" ;;
        -m) OPTS="$OPTS --author=$AUTHOR" ;;
        -t)
            tracking_branch=`git tracking 2>/dev/null`
            if [ "$?" ]; then
                branch="`git branch | grep '^\*' | cut -d ' ' -f 2`"
                echo "$branch" | grep "(" --quiet && exit 1
                OPTS="$OPTS '${tracking_branch}..${branch}'"
            fi ;;
        -[0-9]*[Dd]) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` days ago'" ;;
        -[0-9]*[Ww]) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` weeks ago'" ;;
        -[0-9]*m) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` months ago'" ;;
        -[0-9]*[Yy]) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` years ago'" ;;
        -[0-9]*[hH]) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` hours ago'" ;;
        -[0-9]*M) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` minutes ago'" ;;
        -[0-9]*[sS]) OPTS="$OPTS --since='`echo $OPT | sed 's,-\([0-9]*\).*,\1,'` seconds ago'" ;;
        -[0-9]*) OPTS="$OPTS -n`echo $OPT | sed 's,-\([0-9]*\).*,\1,'`" ;;
        *) UNKNOWN_OPTS="$UNKNOWN_OPTS $OPT";;
    esac
done
if [ "$COUNT_MERGES" = "1" ]; then
    OPTS="$OPTS --merges"
elif [ "$MERGES" = "0" ]; then
    OPTS="$OPTS --no-merges"
fi
OPTS="--oneline '--pretty=%C(red)%h%Creset %C(yellow)%s%Creset %C(green)%an%Creset %C(magenta)%ar%Creset %gs' --abbrev-commit $OPTS $UNKNOWN_OPTS"
if [ "$COUNT_MERGES" = "1" ]; then
    eval git $SUBCOMMAND $OPTS | while read line; do
        change=`echo $line | cut -d' ' -f1 | sed -e 's,:,,g' | perl -pe 's/\x1b\[[0-9;]*[mG]//g'`
        merged=`git log --stat "$change^..$change" | grep ^commit | wc -l;`
        [ -n "$merged" ] && line="$line ($merged)";
        echo $line
    done
elif [ "$BRANCHES" = "1" ]; then
    eval git $SUBCOMMAND $OPTS | while read line; do
        change=`echo $line | cut -d' ' -f1 | sed -e 's,:,,g' | perl -pe 's/\x1b\[[0-9;]*[mG]//g'`
        branches=`git branch -l --contains $change | awk '{print $NF}'`
        [ -z "$branches" ] && branches=`git branch -r --contains $change | grep 'origin/' | awk '{print $NF}'`
        [ -n "$branches" ] && line="$line ($branches)";
        echo $line
    done
else
    eval git $SUBCOMMAND $OPTS
fi

