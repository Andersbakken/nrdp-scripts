#!/bin/bash

count_tilde() {
    r=`perl -e 'my @a=split /[~^]/, $ARGV[0], -1; my $c=-0; foreach (@a) { $c += ($_ =~ /[0-9]+/)  ? $_ : 1; } print "$c\n"' "$1"`
    [ "$r" -gt "1" ] && return $r
    return 0
}

TEST=
MODE=file
BAK=
FILES=()
while [ -n "$1" ]; do
    case $1 in
        -q|--quiet)
            MODE=no
            ;;
        -b|--blame)
            MODE=blame
            ;;
        -c|--commit)
            MODE=commit
            ;;
        -i|--inplace)
            MODE=inplace
            ;;
        -i=*)
            MODE=inplace
            BAK=`echo $1 | sed -e 's,^-i=,,'`
            ;;
        -i*)
            MODE=inplace
            BAK=`echo $1 | sed -e 's,^-i,,'`
            ;;
        --inplace=*)
            MODE=inplace
            BAK=`echo $1 | sed -e 's,^--inplace=,,'`
            ;;
        --dry-run|-N)
            TEST=1
            ;;
        --help|-h)
            echo "$0 [options] files..."
            echo "  -q|--quiet                Don't actually echo out the contents"
            echo "  -b|--blame                Blame file"
            echo "  -c|--commit               Print the whole commit, not just the file"
            echo "  -i(.bak)|--inplace(=.bak) Update file to selected commitish"
            echo "  -b|--blame                Blame file"
        *)
            FILES+=("$1")
            ;;
    esac
    shift
done

for FILE in "${FILES[@]}"; do
    COMMITISH=

    SUBDIR="$(git rev-parse --show-prefix)"
    if echo "$FILE" | grep '@.*' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\(.*\)@\(.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\(.*\)@\(.*\)$,\1,g'`
        COMMITISH=`git rev-parse --verify $MOD 2>/dev/null`
        [ -z "$COMMITISH" ] && COMMITISH=`git rev-list -n 1 --until="$MOD" HEAD -- ${FILE}`
    elif echo "$FILE" | grep '\#.*' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\(.*\)#\(.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\(.*\)#\(.*\)$,\1,g'`
        if echo "$MOD" | grep '~' >/dev/null 2>&1; then
            count_tilde $MOD
            COMMITISH=`git rev-list -n $? HEAD -- ${FILE} | tail -1`
        else
            COMMITISH=`git rev-list HEAD -- ${FILE} | tail -$MOD | head -1`
        fi
    elif echo "$FILE" | grep '~' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\([^~]*\)\(~.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\([^~]*\)\(~.*\)$,\1,g'`
        count_tilde $MOD
        COMMITISH=`git rev-list -n $? HEAD -- ${FILE} | tail -1`
    fi
    [ -z "$COMMITISH" ] && COMMITISH="HEAD"
    echo "Print: $FILE @ $COMMITISH" >&2
    if [ "$MODE" = "file" ]; then
        $TEST git show "${COMMITISH}:${SUBDIR}${FILE}"
    elif [ "$MODE" = "inplace" ]; then
        [ -n "$BAK" ] && /bin/cp "$FILE" "${FILE}${BAK}"
        $TEST git show "${COMMITISH}:${SUBDIR}${FILE}" > "$FILE"
    elif [ "$MODE" = "blame" ]; then
        $TEST git blame "${COMMITISH}" -- "${FILE}"
    elif [ "$MODE" = "commit" ]; then
        $TEST git show "${COMMITISH}"
    fi
done

