#!/bin/sh

count_tilde() {
    r=`perl -e 'my @a=split /[~^]/, $ARGV[0], -1; my $c=-0; foreach (@a) { $c += ($_ =~ /[0-9]+/)  ? $_ : 1; } print "$c\n"' "$1"`
    [ "$r" -gt "1" ] && return $r
    return 0
}

TEST=
GIT_SHOW=file
if [ "$1" = "-q" ]; then
    GIT_SHOW=no
    shift
elif [ "$1" = "-b" ]; then
    GIT_SHOW=blame
    shift
elif [ "$1" = "-c" ]; then
    GIT_SHOW=commit
    shift
fi

while [ "$#" -gt 0 ]; do
    COMMITISH=
    FILE="$1"
    shift

    SUBDIR="$(git rev-parse --show-prefix)"
    if echo "$FILE" | grep '@.*' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\(.*\)@\(.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\(.*\)@\(.*\)$,\1,g'`
        COMMITISH=`git rev-parse --verify $MOD 2>/dev/null`
        [ -z "$COMMITISH" ] && COMMITISH=`git rev-list -n 1 --until="$MOD" HEAD -- ${FILE}`
    elif echo "$FILE" | grep '\#.*' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\(.*\)#\(.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\(.*\)#\(.*\)$,\1,g'`
        if echo "$MOD" | grep '~' >/dev/null 2>&1; then
            count_tilde $MOD
            COMMITISH=`git rev-list -n $? HEAD -- ${FILE} | tail -1`
        else
            COMMITISH=`git rev-list HEAD -- ${FILE} | tail -$MOD | head -1`
        fi
    elif echo "$FILE" | grep '~' >/dev/null 2>&1; then
        MOD=`echo "$FILE" | sed 's,^\([^~]*\)\(~.*\)$,\2,g'`
        FILE=`echo "$FILE" | sed 's,^\([^~]*\)\(~.*\)$,\1,g'`
        count_tilde $MOD
        COMMITISH=`git rev-list -n $? HEAD -- ${FILE} | tail -1`
    fi
    [ -z "$COMMITISH" ] && COMMITISH="HEAD"
    echo "Print: $FILE @ $COMMITISH"
    if [ "$GIT_SHOW" = "file" ]; then
        $TEST git show "${COMMITISH}:${SUBDIR}${FILE}"
    elif [ "$GIT_SHOW" = "blame" ]; then
        $TEST git blame "${COMMITISH}" -- "${FILE}"
    elif [ "$GIT_SHOW" = "commit" ]; then
        $TEST git show "${COMMITISH}"
    fi
done

