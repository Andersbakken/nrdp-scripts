#!/bin/bash

containsElement() {
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
    return 1
}

realPath() {
    OURPWD=$PWD
    cd "$(dirname "$1")"
    LINK=$(readlink "$(basename "$1")")
    while [ "$LINK" ]; do
        cd "$(dirname "$LINK")"
        LINK=$(readlink "$(basename "$1")")
    done
    REALPATH="$PWD/$(basename "$1")"
    cd "$OURPWD"
    echo "$REALPATH"
}
FILES=()
DIRS=()
STASHARGS=()
while [ -n "$1" ]; do
    case $1 in
        --help|-h)
            echo "git stash-file [files...] -m|--message message -mmessage -q --quit"
            ;;
        -m|--message)
            STASHARGS+=($1)
            shift
            STASHARGS+=($1)
            ;;
        -m*|-q|--quiet)
            STASHARGS+=($1)
            ;;
        *)
            if [ -f "$1" ]; then
                FILES+=(`realPath "$1"`)
            elif [ -d "$1" ]; then
                DIRS+=(`realPath "$1"`)
            else
                1>&2 echo "$1 is not a file or a directory"
                exit 1
            fi
            ;;
    esac
    shift
done

if [ -z "${FILES[@]}" ] && [ -z "${DIRS[@]}" ]; then
    1>&2 echo "Nothing to do do"
    exit 1
fi

TMP=`mktemp`
GITROOT=`git rev-parse --show-toplevel`
bash -c "while true; do echo d; done" | git stash -p 2>/dev/null | grep "^diff --git" | sed -e 's,^diff --git a/\(.*\) b/[^/].*$,\1,' | while read i; do
    FILE="$GITROOT/$i"
    if containsElement "$FILE" "${FILES[@]}"; then
        echo "a" >> "$TMP"
    else
        FOUND=
        for DIR in "${DIRS[@]}"; do
            if echo "$FILE" | grep --quiet "${DIR}/"; then
                echo "a" >> "$TMP"
                FOUND=1
                break
            fi
        done
        [ -z "$FOUND" ] && echo "d" >> "$TMP"
    fi
done

git stash -p $STASHARGS < "$TMP"
rm "$TMP"
