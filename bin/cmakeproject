#!/bin/sh

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "cmakeproject [--lib] [--staticlib] [--app (default)"
    exit 0
fi

if [ -f "CMakeLists.txt" ]; then
    echo "There's already a CMakeLists.txt here"
    exit 1
fi

echo "cmake_minimum_required(VERSION 2.8)" > CMakeLists.txt
echo "include_directories(\${CMAKE_CURRENT_LIST_DIR})" >> CMakeLists.txt
echo "set(CMAKE_CXX_FLAGS \"\${CMAKE_CXX_FLAGS} -std=c++0x\")" >> CMakeLists.txt
echo "set(CMAKE_C_FLAGS \"\${CMAKE_C_FLAGS}\")" >> CMakeLists.txt
mode="$1"
test -z "$mode" && mode="--app"

case "$mode" in
    --app)
        echo "add_executable(`basename $PWD` `find . -name "*.cpp" -or -name "*.c" | grep -v "/CMakeFiles/" | sed -e 's,^\./,,' | xargs`)" >> CMakeLists.txt
        ;;
    --lib)
        echo "add_library(`basename $PWD` `find . -name "*.cpp" -or -name "*.c" | grep -v "/CMakeFiles/" | sed -e 's,^\./,,' | xargs`)" >> CMakeLists.txt
        ;;
    --staticlib)
        echo "add_library(`basename $PWD` STATIC `find . -name "*.cpp" -or -name "*.c" | grep -v "/CMakeFiles/" | sed -e 's,^\./,,' | xargs`)" >> CMakeLists.txt
        ;;
    *)
        echo "Invalid mode $mode"
        exit 1
        ;;
esac
