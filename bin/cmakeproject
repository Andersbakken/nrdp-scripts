#!/bin/bash

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "cmakeproject [--lib] [--staticlib] [--app (default)] [--force]"
    exit 0
fi

mode=app
force=
while [ -n "$1" ]; do
    case $1 in
        --force|-f)
            force=1
            ;;
        --lib|-l)
            mode=lib
            ;;
        --staticlib|-s)
            mode=staticlib
            ;;
        --app|--application|-a)
            mode=app
            ;;
        *)
            echo "unknown arg $1"
            exit 1
            ;;
    esac
    shift
done

if [ -f "CMakeLists.txt" ] && [ -z "$force" ]; then
    echo "There's already a CMakeLists.txt here"
    exit 1
fi

echo "cmake_minimum_required(VERSION 2.8)" > CMakeLists.txt
echo "include_directories(\${CMAKE_CURRENT_LIST_DIR})" >> CMakeLists.txt
echo "set(CMAKE_CXX_FLAGS \"\${CMAKE_CXX_FLAGS} -std=c++11\")" >> CMakeLists.txt
echo "set(CMAKE_C_FLAGS \"\${CMAKE_C_FLAGS}\")" >> CMakeLists.txt

FIND="find . -name '*.cpp' -or -iname '*.c' -or -iname '*.cc' -or -iname '*.cxx' -or -iname '*.m' -or -name '*.mm' | grep -v '/CMakeFiles/' | sed -e 's,^\./,,' | xargs"

case "$mode" in
    app)
        echo "add_executable(`basename $PWD` `eval "$FIND"`)" >> CMakeLists.txt
        ;;
    lib)
        echo "add_library(`basename $PWD` `eval "$FIND"`)" >> CMakeLists.txt
        ;;
    staticlib)
        echo "add_library(`basename $PWD` STATIC `eval "$FIND"`)" >> CMakeLists.txt
        ;;
esac
