#!/bin/bash

MODE=DISPLAY
SET=
BRANCH=
while [ -n "$1" ]; do
    case $1 in
        --help|-h)
            echo "git tracking [--reset|-r] [--help|-h] [--rebase|-r] [new-tracking-branch]"
            ;;
        --reset|-r)
            MODE=RESET
            ;;
        --rebase)
            MODE=REBASE
            ;;
        --branch)
            shift
            BRANCH="$1"
            ;;
        *)
            if [ -n "$SET" ]; then
                BRANCH="$SET"
                SET="$1"
            else
                MODE=SET
                SET="$1"
            fi
            ;;
    esac
    shift
done

if [ "$MODE" = "RESET" ] && [ -n "$BRANCH" ]; then
    echo "I can't do --reset with another branch"
    exit 1
fi

[ -z "$BRANCH" ] && BRANCH="`git branch | grep '^\*' | cut -d ' ' -f 2`"
echo "$BRANCH" | grep "(" --quiet && exit 1

lookupTracking() {
    REMOTE="`git config \"branch.$BRANCH.remote\"`"
    test -z "$REMOTE" && exit 1
    MERGE="`git config \"branch.$BRANCH.merge\"`"
    test -z "$MERGE" && exit 1
    if [ "$REMOTE" = "." ] && echo $merge | grep "^refs/remotes/" --quiet; then
        echo $MERGE | sed -e 's,^refs/remotes/,,'
    else
        MERGE="`echo $MERGE | sed -e 's,^refs\/heads\/,,'`"
        echo "$REMOTE/$MERGE"
    fi
}

case $MODE in
    DISPLAY)
        lookupTracking
        ;;
    RESET)
        git reset --hard `lookupTracking`
        ;;
    REBASE)
        git rebase --onto `lookupTracking` "$BRANCH"
        ;;
    SET)
        if [ "`git --version | sed -e 's,[^0-9],,g' | cut -b1,2`" -lt "18" ]; then
            git branch --set-upstream "$BRANCH" "$SET"
        else
            git branch --set-upstream-to="$SET" "$BRANCH"
        fi
        ;;
esac
exit 0
